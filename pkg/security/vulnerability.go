package security

import (
	"fmt"
	"time"
)

// Vulnerability represents a security vulnerability in a package
type Vulnerability struct {
	ID          string
	Package     string
	Version     string
	Description string
	Severity    string
	Published   time.Time
	References  []string
}

// VulnerabilityScanner defines the interface for vulnerability scanning
type VulnerabilityScanner interface {
	ScanPackage(name string, version string) ([]Vulnerability, error)
}

// GithubAdvisoryScanner implements VulnerabilityScanner using GitHub Advisory DB
type GithubAdvisoryScanner struct {
	// TODO: Add GitHub API client
}

// ScanPackage checks a package against the GitHub Advisory Database
func (s *GithubAdvisoryScanner) ScanPackage(name string, version string) ([]Vulnerability, error) {
	// TODO: Implement GitHub Advisory DB API integration
	return []Vulnerability{}, fmt.Errorf("GitHub Advisory scanning not implemented yet")
}

// NVDScanner implements VulnerabilityScanner using NVD feeds
type NVDScanner struct {
	// TODO: Add NVD API client
}

// ScanPackage checks a package against the NVD database
func (s *NVDScanner) ScanPackage(name string, version string) ([]Vulnerability, error) {
	// TODO: Implement NVD API integration
	return []Vulnerability{}, fmt.Errorf("NVD scanning not implemented yet")
}

// NewVulnerabilityScanner creates a new vulnerability scanner
func NewVulnerabilityScanner() VulnerabilityScanner {
	// For now, default to GitHub Advisory scanner
	return &GithubAdvisoryScanner{}
}
